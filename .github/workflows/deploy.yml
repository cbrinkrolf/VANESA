name: Create release on version tag and publish core package
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.repository == 'cbrinkrolf/VANESA' # Only run on main repository and not forks
    steps:
      - name: Retrieve tag name
        id: tag_name
        uses: little-core-labs/get-git-tag@v3.0.1
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag_name.outputs.tag }}
          release_name: Release ${{ steps.tag_name.outputs.tag }}
          draft: false
          prerelease: false
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: print Java version
        run: java -version
      - name: Build with Maven
        run: mvn package -DskipTests --file pom.xml
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./target/VANESA-${{ steps.tag_name.outputs.tag }}.jar
          asset_name: VANESA-${{ steps.tag_name.outputs.tag }}.jar
          asset_content_type: application/java-archive
